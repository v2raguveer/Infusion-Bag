library("Seurat")
library("dplyr")
library("ggplot2")
library("sctransform")

bag.284.10x = Read10X(data.dir = "C:/Users/raguveerv2/Documents/Data/Infusion Bag/cellrangerFiltered/s284_filterMatrix")
class(bag.284.10x)
dim(bag.284.10x)
bag.284.10x[1:6, 1:6]
genes_1_transcript <- apply(bag.284.10x, 2, function(x) sum(x>0))
hist(genes_1_transcript, breaks=100, main="Distribution of Genes", xlab= "Genes with 1 tag")
summary(genes_1_transcript)
hist(colSums(bag.284.10x), breaks =100, main="Expression per cell")
bag.284.S = CreateSeuratObject(bag.284.10x, min.cells=3, min.features = 150)
data.bag284 = GetAssayData(bag.284.S)

#QC
bag.284.S[["percent.mt"]] <- PercentageFeatureSet(bag.284.S, pattern = "MT-")
head(bag.284.S@meta.data)
VlnPlot(bag.284.S, features = c("nCount_RNA", "nFeature_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(bag.284.S, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot2 <- FeatureScatter(bag.284.S, feature1 = "nFeature_RNA", feature2= "percent.mt")
plot3 <- FeatureScatter(bag.284.S, feature1 = "nCount_RNA", feature2= "percent.mt")
CombinePlots(plots=list(plot1, plot2))
table(bag.284.S@meta.data$percent.mt <10 &bag.284.S@meta.data$nFeature_RNA<3000& bag.284.S@meta.data$nCount_RNA<15000)
bag.284.F <- subset(bag.284.S, subset = nFeature_RNA<3500 & percent.mt < 15)
data.bag284= GetAssayData(bag.284.F)

#Normalization
bag.284.N <- NormalizeData(bag.284.F)
data.bag284 = GetAssayData(bag.284.N)
df.bag.pre <- data.frame(GetAssayData(bag.284.F))
df.bag.post <- data.frame(GetAssayData(bag.284.N))
par(mfrow = c(1,2))
hist(colSums(df.bag.pre), main = "Expression Pre-Normalization")
hist(colSums(df.bag.post), main = "Expression Normalized")

#SCTransform
sbag <- SCTransform(bag.284.S, vars.to.regress = "percent.mt", verbose = FALSE)
sbag1 <- RunPCA(sbag, verbose=FALSE)
sbag1 <- RunUMAP(sbag1,reduction="pca", dims=1:30, verbose=FALSE)
sbag1 <- FindNeighbors(sbag1, dims=1:30, verbose = FALSE)
sbag1 <- FindClusters(sbag1, verbose=FALSE)
DimPlot(sbag1, label = TRUE) + NoLegend()

#Feature Selection
bag.284.V <- FindVariableFeatures(bag.284.N, selection.method = "mean.var.plot")
top10 <- head(VariableFeatures(bag.284.V), 10)
VariableFeaturePlot(bag.284.V)
LabelPoints(VariableFeaturePlot(bag.284.V), points=top10, repel=TRUE)
plotA <- LabelPoints(VariableFeaturePlot(bag.284.V), points=top10, repel=TRUE)

bag.284.V2 <- FindVariableFeatures(bag.284.N, selection.method = "vst", nfeatures = 2000)
top10A <- head(VariableFeatures(bag.284.V2), 10)
VariableFeaturePlot(bag.284.V2)
LabelPoints(VariableFeaturePlot(bag.284.V2), points=top10, repel=TRUE)
plotB <- LabelPoints(VariableFeaturePlot(bag.284.V2), points=top10, repel=TRUE)
CombinePlots(plots = list(plotA, plotB))
HVFInfo(bag.284.V2)
#moved forward with v2, using selection method vst based on papers published by Seurat

#Scale Data
all.genes <- rownames(bag.284.V2)
bag.284.V2S <- ScaleData(bag.284.V2, features = all.genes, vars.to.regress = "percent.mt")

#Linear Dimensional Reduction
bag.284.V2S <- RunPCA(bag.284.V2S, features = VariableFeatures(bag.284.V2S))
print(bag.284.V2S[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(bag.284.V2S, dims = 1:2, reduction = 'pca')
DimPlot(bag.284.V2S, reduction = "pca")
DimHeatmap(bag.284.V2S, dims = 1, nfeatures = 50, cells = 500, balanced = TRUE)
bag.284.V2S <- ProjectDim(bag.284.V2S, reduction = "pca", verbose = FALSE)
PCHeatmap(bag.284.V2S, dims= 1:12, cells = 500, balanced=TRUE)
#adapt pc.use for how many principal components to use
PCHeatmap(bag.284.V2S, dims=1, balanced = TRUE)

#Decidng on PCAs
bag.284.V2S <- JackStraw(bag.284.V2S, num.replicate=100)
bag.284.V2S <- ScoreJackStraw(bag.284.V2S, dims= 1:35)
JackStrawPlot(bag.284.V2S, dims = 1:35)
ElbowPlot(bag.284.V2S)

#NEED TO REGRESS OUT MT GENES AND SEE IF THAT HELPS, CONSIDER USING SCTRANSFORM


all.genes2 <- rownames(bag.284.V)
bag.284.VS <- ScaleData(bag.284.V, features=all.genes2)
bag.284.VS <- RunPCA(bag.284.VS, features = VariableFeatures(bag.284.VS))
print(bag.284.VS[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(bag.284.VS, dims = 1:2, reduction = 'pca')
DimPlot(bag.284.VS, reduction = "pca")
DimHeatmap(bag.284.VS, dims = 1, nfeatures = 50, cells = 500, balanced = TRUE)



